//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1174.0 using the following command:
// xscgen -n |core.xsd=MentorLake.Gir.Core -n |c.xsd=MentorLake.Gir.C -n |glib.xsd=MentorLake.Gir.GLib -n |xml.xsd=MentorLake.Gir.Xml --o GirTypes --cn --uc -ct System.Collections.Generic.List`1 --sf --nh ./core.xsd
namespace MentorLake.Gir.Core
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    public partial interface ICallableAttrs : IInfoAttrs, MentorLake.Gir.C.IIdentifier1
    {
        
        /// <summary>
        /// <para>name of the Callable</para>
        /// </summary>
        [DescriptionAttribute("name of the Callable")]
        string Name
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>Callable it is shadowed by. For example, in C++, only one version of an overloaded callable will appear</para>
        /// </summary>
        [DescriptionAttribute("Callable it is shadowed by. For example, in C++, only one version of an overloade" +
            "d callable will appear")]
        string ShadowedBy
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>Callable it shadows. For example, in C++, only one version of an overloaded callable will appear</para>
        /// </summary>
        [DescriptionAttribute("Callable it shadows. For example, in C++, only one version of an overloaded calla" +
            "ble will appear")]
        string Shadows
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>Binary attribute, true if the callable can throw an error</para>
        /// </summary>
        [DescriptionAttribute("Binary attribute, true if the callable can throw an error")]
        ICallableAttrsThrows Throws
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>if for backward compatibility reason the callable has a name in the source code but should be known by another one, this attribute contains the new name</para>
        /// </summary>
        [DescriptionAttribute("if for backward compatibility reason the callable has a name in the source code b" +
            "ut should be known by another one, this attribute contains the new name")]
        string MovedTo
        {
            get;
            set;
        }
        
        string AsyncFunc
        {
            get;
            set;
        }
        
        string SyncFunc
        {
            get;
            set;
        }
        
        string FinishFunc
        {
            get;
            set;
        }
    }
}
